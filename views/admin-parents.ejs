<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Parents Management | School Management System</title>
    <%- include('./partials/styles') %>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css">
    <style>
        .filter-card {
            margin-bottom: 20px;
            border-radius: 10px;
            background-color: #f8f9fa;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
        }
        
        .filter-body {
            padding: 15px;
        }
        
        .action-column {
            white-space: nowrap;
            width: 130px;
        }
        
        .action-btn {
            padding: 4px 8px;
            margin: 0 2px;
            font-size: 0.875rem;
        }
        
        .parent-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }
        
        .parent-info {
            display: flex;
            align-items: center;
        }
        
        .parent-name {
            font-weight: 600;
            margin-left: 10px;
        }
        
        .parent-table th, .parent-table td {
            vertical-align: middle;
        }
        
        .children-count {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 24px;
            height: 24px;
            border-radius: 50%;
            background-color: rgba(52, 152, 219, 0.15);
            color: #3498db;
            font-weight: 600;
            font-size: 0.75rem;
            margin-left: 5px;
        }
        
        .children-icons {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
        }
        
        .child-icon {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .status-badge {
            padding: 6px 10px;
            border-radius: 30px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .relation-father {
            background-color: rgba(52, 152, 219, 0.15);
            color: #3498db;
        }
        
        .relation-mother {
            background-color: rgba(155, 89, 182, 0.15);
            color: #9b59b6;
        }
        
        .relation-guardian {
            background-color: rgba(46, 204, 113, 0.15);
            color: #2ecc71;
        }
        
        .relation-other {
            background-color: rgba(243, 156, 18, 0.15);
            color: #f39c12;
        }
        
        .upload-btn-wrapper {
            position: relative;
            overflow: hidden;
            display: inline-block;
        }
        
        .upload-btn-wrapper input[type=file] {
            position: absolute;
            left: 0;
            top: 0;
            opacity: 0;
            cursor: pointer;
            width: 100%;
            height: 100%;
        }
    </style>
</head>
<body>
    <%- include('./partials/sidebar', { activePage: 'parents' }) %>
    
    <!-- Main Content -->
    <div class="content">
        <%- include('./partials/header', { pageTitle: 'Parents Management' }) %>
        
        <!-- Filter Section -->
        <div class="card filter-card">
            <div class="filter-body">
                <form id="filter-form" class="row g-3">
                    <div class="col-md-4">
                        <label for="relationshipToStudent" class="form-label">Relationship</label>
                        <select class="form-select" id="relationshipToStudent" name="relationshipToStudent">
                            <option value="">All Relationships</option>
                            <option value="Father" <%= currentFilters.relationshipToStudent === 'Father' ? 'selected' : '' %>>Father</option>
                            <option value="Mother" <%= currentFilters.relationshipToStudent === 'Mother' ? 'selected' : '' %>>Mother</option>
                            <option value="Guardian" <%= currentFilters.relationshipToStudent === 'Guardian' ? 'selected' : '' %>>Guardian</option>
                            <option value="Other" <%= currentFilters.relationshipToStudent === 'Other' ? 'selected' : '' %>>Other</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label for="hasChildren" class="form-label">Children Status</label>
                        <select class="form-select" id="hasChildren" name="hasChildren">
                            <option value="">All Parents</option>
                            <option value="true" <%= currentFilters.hasChildren === 'true' ? 'selected' : '' %>>With Children</option>
                            <option value="false" <%= currentFilters.hasChildren === 'false' ? 'selected' : '' %>>Without Children</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label for="search" class="form-label">Search</label>
                        <div class="input-group">
                            <input type="text" class="form-control" id="search" name="search" placeholder="Name, Email, Phone, ID..." value="<%= currentFilters.search || '' %>">
                            <button class="btn btn-primary" type="submit">
                                <i class="bi bi-search me-1"></i> Search
                            </button>
                            <button class="btn btn-outline-secondary" type="button" id="reset-filter">
                                <i class="bi bi-x-circle me-1"></i> Reset
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        
        <!-- Action Buttons -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h5 class="m-0"><i class="fas fa-users me-2"></i> Parent List (<%= parents.length %> parents)</h5>
            </div>
            <div>
                <a href="/admin/create-parent" class="btn btn-primary me-2">
                    <i class="bi bi-plus-circle me-1"></i> Add Parent
                </a>
                <div class="upload-btn-wrapper">
                    <button class="btn btn-outline-primary me-2">
                        <i class="bi bi-upload me-1"></i> Import Excel
                    </button>
                    <input type="file" id="excel-upload" accept=".xlsx, .xls" />
                </div>
                <button class="btn btn-outline-success" id="export-excel">
                    <i class="bi bi-download me-1"></i> Export Excel
                </button>
            </div>
        </div>
        
        <!-- Parents Table -->
        <div class="card">
            <div class="card-body">
                <table class="table table-hover parent-table" id="parentsTable">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Parent</th>
                            <th scope="col">Code</th>
                            <th scope="col">Relationship</th>
                            <th scope="col">Children</th>
                            <th scope="col">Contact</th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% parents.forEach((parent, index) => { %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td>
                                    <div class="parent-info">
                                        <img src="<%= parent.profilePicture || `https://ui-avatars.com/api/?name=${parent.firstName}+${parent.lastName}&background=3498db&color=fff` %>" alt="<%= parent.firstName %>" class="parent-avatar">
                                        <div class="parent-name">
                                            <div><%= parent.firstName %> <%= parent.lastName %></div>
                                            <small class="text-muted"><%= parent.email %></small>
                                        </div>
                                    </div>
                                </td>
                                <td><span class="badge bg-light text-dark"><%= parent.parentCode %></span></td>
                                <td>
                                    <span class="status-badge relation-<%= parent.relationshipToStudent ? parent.relationshipToStudent.toLowerCase() : 'other' %>">
                                        <%= parent.relationshipToStudent || 'Parent' %>
                                    </span>
                                </td>
                                <td>
                                    <div>
                                        <% if (parent.childs && parent.childs.length > 0) { %>
                                            <div class="d-flex align-items-center">
                                                <span class="me-2"><%= parent.childs.length %> child<%= parent.childs.length > 1 ? 'ren' : '' %></span>
                                                <div class="children-icons">
                                                    <% parent.childs.slice(0, 3).forEach(child => { %>
                                                        <img src="<%= child.profilePicture || `https://ui-avatars.com/api/?name=${child.firstName}+${child.lastName}&background=2ecc71&color=fff` %>" 
                                                             alt="<%= child.firstName %>" 
                                                             class="child-icon" 
                                                             title="<%= child.firstName %> <%= child.lastName %> - Grade <%= child.grade %>">
                                                    <% }); %>
                                                    <% if (parent.childs.length > 3) { %>
                                                        <div class="child-icon d-flex align-items-center justify-content-center bg-light" title="<%= parent.childs.length - 3 %> more children">
                                                            +<%= parent.childs.length - 3 %>
                                                        </div>
                                                    <% } %>
                                                </div>
                                            </div>
                                        <% } else { %>
                                            <span class="text-muted">No children</span>
                                        <% } %>
                                    </div>
                                </td>
                                <td>
                                    <div><i class="bi bi-telephone me-1"></i> <%= parent.phoneNumber %></div>
                                    <% if (parent.alternatePhone) { %>
                                        <div><i class="bi bi-telephone-plus me-1"></i> <%= parent.alternatePhone %></div>
                                    <% } %>
                                </td>
                                <td class="action-column">
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a href="/admin/parents/<%= parent._id %>" class="btn btn-outline-primary" data-bs-toggle="tooltip" title="View">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <button class="btn btn-outline-success edit-btn" data-id="<%= parent._id %>" data-bs-toggle="tooltip" title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button class="btn btn-outline-danger delete-btn" data-id="<%= parent._id %>" data-bs-toggle="tooltip" title="Delete">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Edit Parent Modal -->
    <div class="modal fade" id="editParentModal" tabindex="-1" aria-labelledby="editParentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editParentModalLabel">Edit Parent</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="edit-parent-form">
                        <input type="hidden" id="edit-parent-id">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="edit-firstName" class="form-label">First Name</label>
                                <input type="text" class="form-control" id="edit-firstName" name="firstName" required>
                            </div>
                            <div class="col-md-6">
                                <label for="edit-lastName" class="form-label">Last Name</label>
                                <input type="text" class="form-control" id="edit-lastName" name="lastName" required>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="edit-email" class="form-label">Email</label>
                                <input type="email" class="form-control" id="edit-email" name="email" required>
                            </div>
                            <div class="col-md-6">
                                <label for="edit-phoneNumber" class="form-label">Phone Number</label>
                                <input type="tel" class="form-control" id="edit-phoneNumber" name="phoneNumber" required>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="edit-relationshipToStudent" class="form-label">Relationship to Student</label>
                                <select class="form-select" id="edit-relationshipToStudent" name="relationshipToStudent">
                                    <option value="Father">Father</option>
                                    <option value="Mother">Mother</option>
                                    <option value="Guardian">Guardian</option>
                                    <option value="Other">Other</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="edit-occupation" class="form-label">Occupation</label>
                                <input type="text" class="form-control" id="edit-occupation" name="occupation">
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="save-parent-btn">Save Changes</button>
                </div>
            </div>
        </div>
    </div>

    <%- include('./partials/scripts') %>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function() {
            // Initialize DataTable
            const parentsTable = $('#parentsTable').DataTable({
                paging: true,
                ordering: true,
                info: true,
                lengthChange: true,
                searching: false, // We have our own search
                language: {
                    emptyTable: "No parents found with the current filters"
                },
                columnDefs: [
                    { orderable: false, targets: [6] } // Disable sorting on action column
                ]
            });
            
            // Filter form submission
            $('#filter-form').on('submit', function(e) {
                e.preventDefault();
                
                // Get form data and convert to query string
                const formData = $(this).serialize();
                
                // Redirect with query parameters
                window.location.href = '/admin/parents?' + formData;
            });
            
            // Reset filters
            $('#reset-filter').on('click', function() {
                window.location.href = '/admin/parents';
            });
            
            // Handle Excel upload
            $('#excel-upload').on('change', function() {
                const file = this.files[0];
                if (!file) return;
                
                const formData = new FormData();
                formData.append('excelFile', file);
                
                // Show loading
                Swal.fire({
                    title: 'Uploading...',
                    text: 'Please wait while we process your file',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });
                
                // Upload file
                fetch('/admin/upload-parents', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Parents imported successfully',
                            confirmButtonColor: '#3498db'
                        }).then(() => {
                            // Reload page to show new parents
                            window.location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message || 'Failed to import parents',
                            confirmButtonColor: '#3498db'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while uploading the file',
                        confirmButtonColor: '#3498db'
                    });
                });
            });
            
            // Handle parent deletion
            $('.delete-btn').on('click', function() {
                const parentId = $(this).data('id');
                
                Swal.fire({
                    title: 'Are you sure?',
                    text: "This action cannot be undone!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#e74c3c',
                    cancelButtonColor: '#7f8c8d',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Send delete request
                        fetch(`/admin/parents/${parentId}`, {
                            method: 'DELETE'
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Deleted!',
                                    text: 'Parent has been deleted.',
                                    confirmButtonColor: '#3498db'
                                }).then(() => {
                                    // Remove row from table
                                    $(this).closest('tr').remove();
                                    // Reload page to update the count
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: data.message || 'Failed to delete parent',
                                    confirmButtonColor: '#3498db'
                                });
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'An error occurred while deleting the parent',
                                confirmButtonColor: '#3498db'
                            });
                        });
                    }
                });
            });
            
            // Handle edit button click - populate modal with parent data
            $('.edit-btn').on('click', function() {
                const parentId = $(this).data('id');
                
                // Show loading
                Swal.fire({
                    title: 'Loading...',
                    text: 'Please wait while we fetch parent data',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });
                
                // Fetch parent data
                fetch(`/admin/parents/${parentId}`, {
                    headers: {
                        'Accept': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    Swal.close();
                    
                    if (data.success) {
                        const parent = data.data;
                        
                        // Populate modal fields
                        $('#edit-parent-id').val(parent._id);
                        $('#edit-firstName').val(parent.firstName);
                        $('#edit-lastName').val(parent.lastName);
                        $('#edit-email').val(parent.email);
                        $('#edit-phoneNumber').val(parent.phoneNumber);
                        $('#edit-relationshipToStudent').val(parent.relationshipToStudent);
                        $('#edit-occupation').val(parent.occupation);
                        
                        // Show modal
                        $('#editParentModal').modal('show');
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message || 'Failed to fetch parent data',
                            confirmButtonColor: '#3498db'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.close();
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while fetching parent data',
                        confirmButtonColor: '#3498db'
                    });
                });
            });
            
            // Handle save changes button
            $('#save-parent-btn').on('click', function() {
                const parentId = $('#edit-parent-id').val();
                
                // Get form data
                const formData = {
                    firstName: $('#edit-firstName').val(),
                    lastName: $('#edit-lastName').val(),
                    email: $('#edit-email').val(),
                    phoneNumber: $('#edit-phoneNumber').val(),
                    relationshipToStudent: $('#edit-relationshipToStudent').val(),
                    occupation: $('#edit-occupation').val()
                };
                
                // Show loading
                Swal.fire({
                    title: 'Saving...',
                    text: 'Please wait while we update parent data',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });
                
                // Send update request
                fetch(`/admin/parents/${parentId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Parent updated successfully',
                            confirmButtonColor: '#3498db'
                        }).then(() => {
                            // Close modal and reload page
                            $('#editParentModal').modal('hide');
                            window.location.reload();
                        });
                    } else {
                        Swal.close();
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message || 'Failed to update parent',
                            confirmButtonColor: '#3498db'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.close();
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while updating the parent',
                        confirmButtonColor: '#3498db'
                    });
                });
            });
            
            // Handle export to Excel
            $('#export-excel').on('click', function() {
                // This would typically send a request to an API endpoint that generates and returns an Excel file
                // For now, just show a placeholder message
                Swal.fire({
                    icon: 'info',
                    title: 'Export Feature',
                    text: 'The Excel export functionality will be implemented here',
                    confirmButtonColor: '#3498db'
                });
            });
        });
    </script>
</body>
</html> 